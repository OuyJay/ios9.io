worker_processes auto;
error_log logs/error.log info;
pid logs/nginx.pid;

# 工作进程数量
events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

# HTTP 服务器配置
http {
    include mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
    access_log logs/access.log main;

    # 基本设置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # 压缩设置
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # CORS 设置
    map $http_origin $cors_origin {
        default "*";
    }

    # 静态文件服务器
    server {
        listen 8080;
        server_name localhost;
        root /path/to/ios9-stream/web;
        index index.html;

        # CORS 头信息
        add_header Access-Control-Allow-Origin $cors_origin;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        add_header Access-Control-Allow-Credentials 'true';

        # HLS 流
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        # DASH 流
        location /dash {
            types {
                application/dash+xml mpd;
                video/mp4 mp4;
                audio/mp4 m4a;
                application/octet-stream chm;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        # HTTP-FLV 流
        location /flv {
            flv_live on;
            chunked_transfer_encoding on;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        # API 接口
        location /api/ {
            alias /path/to/ios9-stream/admin/api/;
            index index.php;
            try_files $uri $uri/ /api/index.php?$args;

            # PHP 配置（如果使用 PHP）
            location ~ \.php$ {
                fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $request_filename;
                include fastcgi_params;
            }
        }

        # 管理界面
        location /admin {
            alias /path/to/ios9-stream/admin;
            index index.html;
            try_files $uri $uri/ /admin/index.html;
        }

        # 静态文件缓存
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
        }

        # 处理其他请求
        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}

# RTMP 服务器配置
rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        # 直播应用
        application live {
            live on;
            record off;
            
            # HLS 配置
            hls on;
            hls_path /tmp/hls;
            hls_fragment 6s;
            hls_playlist_length 30s;
            hls_fragment_naming system;
            hls_fragment_slicing aligned;
            
            # 针对 iOS 9 的 HLS 优化
            hls_variant _low BANDWIDTH=500000; # 低质量
            hls_variant _mid BANDWIDTH=1000000; # 中质量
            hls_variant _high BANDWIDTH=2000000; # 高质量
            
            # DASH 配置
            dash on;
            dash_path /tmp/dash;
            dash_fragment 4s;
            dash_playlist_length 60s;
            dash_nested on;
            
            # HTTP-FLV 配置
            http_flv on;
            
            # 流转码配置 - 按照不同的质量设置
            exec_push ffmpeg -i rtmp://localhost/live/$name
                -c:a aac -ar 44100 -b:a 128k
                -c:v libx264 -preset veryfast -profile:v baseline -level 3.0 -g 30 -b:v 2000k -s 1280x720
                -f flv rtmp://localhost/live/${name}_high
                
                -c:a aac -ar 44100 -b:a 96k
                -c:v libx264 -preset veryfast -profile:v baseline -level 3.0 -g 30 -b:v 1000k -s 854x480
                -f flv rtmp://localhost/live/${name}_mid
                
                -c:a aac -ar 44100 -b:a 64k
                -c:v libx264 -preset veryfast -profile:v baseline -level 3.0 -g 30 -b:v 500k -s 640x360
                -f flv rtmp://localhost/live/${name}_low;
        }
    }
} 